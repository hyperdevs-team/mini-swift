// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 52;
	objects = {

/* Begin PBXBuildFile section */
		12A3ADEF2328D3D100019F49 /* PrimitiveSequenceType+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 12A3ADED2328D33400019F49 /* PrimitiveSequenceType+Extensions.swift */; };
		F2AC9CCE244EF6A500487649 /* NIO in Frameworks */ = {isa = PBXBuildFile; productRef = F2AC9CCD244EF6A500487649 /* NIO */; };
		F2AC9CD1244EF6BC00487649 /* RxSwift in Frameworks */ = {isa = PBXBuildFile; productRef = F2AC9CD0244EF6BC00487649 /* RxSwift */; };
		OBJ_289 /* Action.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Action.swift */; };
		OBJ_290 /* ActionReducer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* ActionReducer.swift */; };
		OBJ_291 /* Dispatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Dispatcher.swift */; };
		OBJ_292 /* Middleware.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Middleware.swift */; };
		OBJ_293 /* ReducerGroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* ReducerGroup.swift */; };
		OBJ_294 /* ServiceType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* ServiceType.swift */; };
		OBJ_295 /* StateType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* StateType.swift */; };
		OBJ_296 /* Store.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Store.swift */; };
		OBJ_297 /* Task.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Task.swift */; };
		OBJ_298 /* Dictionary+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Dictionary+Extensions.swift */; };
		OBJ_299 /* DispatchQueue+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* DispatchQueue+Extensions.swift */; };
		OBJ_300 /* String+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* String+Extensions.swift */; };
		OBJ_301 /* TestMiddleware.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* TestMiddleware.swift */; };
		OBJ_302 /* OrderedSet.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* OrderedSet.swift */; };
		OBJ_303 /* PayloadAction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* PayloadAction.swift */; };
		OBJ_304 /* ObservableType+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* ObservableType+Extensions.swift */; };
		OBJ_305 /* LoggingService.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* LoggingService.swift */; };
		OBJ_306 /* SharedDictionary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* SharedDictionary.swift */; };
		OBJ_320 /* ChainTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* ChainTests.swift */; };
		OBJ_321 /* Dictionary+ExtensionsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* Dictionary+ExtensionsTests.swift */; };
		OBJ_322 /* DispatcherTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* DispatcherTests.swift */; };
		OBJ_323 /* ReducerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* ReducerTests.swift */; };
		OBJ_324 /* TaskTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* TaskTests.swift */; };
		OBJ_325 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* XCTestManifests.swift */; };
		OBJ_327 /* MiniSwift.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Mini::MiniSwift::Product" /* MiniSwift.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		F2F0AA162321256C00BC7CD9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Mini::MiniSwift";
			remoteInfo = MiniSwift;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		12A3ADED2328D33400019F49 /* PrimitiveSequenceType+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "PrimitiveSequenceType+Extensions.swift"; sourceTree = "<group>"; };
		"Mini::MiniSwift::Product" /* MiniSwift.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = MiniSwift.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Mini::MiniSwiftTests::Product" /* MiniSwiftTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = MiniSwiftTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* ActionReducer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ActionReducer.swift; sourceTree = "<group>"; };
		OBJ_11 /* Dispatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Dispatcher.swift; sourceTree = "<group>"; };
		OBJ_12 /* Middleware.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Middleware.swift; sourceTree = "<group>"; };
		OBJ_13 /* ReducerGroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReducerGroup.swift; sourceTree = "<group>"; };
		OBJ_14 /* ServiceType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServiceType.swift; sourceTree = "<group>"; };
		OBJ_15 /* StateType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StateType.swift; sourceTree = "<group>"; };
		OBJ_16 /* Store.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Store.swift; sourceTree = "<group>"; };
		OBJ_17 /* Task.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Task.swift; sourceTree = "<group>"; };
		OBJ_20 /* Dictionary+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Dictionary+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_21 /* DispatchQueue+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DispatchQueue+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_22 /* String+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "String+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_24 /* TestMiddleware.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestMiddleware.swift; sourceTree = "<group>"; };
		OBJ_240 /* bin */ = {isa = PBXFileReference; lastKnownFileType = folder; path = bin; sourceTree = SOURCE_ROOT; };
		OBJ_242 /* fastlane */ = {isa = PBXFileReference; lastKnownFileType = folder; path = fastlane; sourceTree = SOURCE_ROOT; };
		OBJ_243 /* Templates */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Templates; sourceTree = SOURCE_ROOT; };
		OBJ_245 /* LICENSE */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		OBJ_247 /* MiniSwift.framework.coverage.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = MiniSwift.framework.coverage.txt; sourceTree = "<group>"; };
		OBJ_248 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_249 /* Rakefile */ = {isa = PBXFileReference; lastKnownFileType = text; path = Rakefile; sourceTree = "<group>"; };
		OBJ_25 /* OrderedSet.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OrderedSet.swift; sourceTree = "<group>"; };
		OBJ_250 /* MiniSwiftTests.xctest.coverage.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = MiniSwiftTests.xctest.coverage.txt; sourceTree = "<group>"; };
		OBJ_251 /* _config.yml */ = {isa = PBXFileReference; lastKnownFileType = text; path = _config.yml; sourceTree = "<group>"; };
		OBJ_252 /* DangerFile */ = {isa = PBXFileReference; lastKnownFileType = text; path = DangerFile; sourceTree = "<group>"; };
		OBJ_253 /* Gemfile */ = {isa = PBXFileReference; lastKnownFileType = text; path = Gemfile; sourceTree = "<group>"; };
		OBJ_254 /* Mini-Swift.podspec */ = {isa = PBXFileReference; lastKnownFileType = text; path = "Mini-Swift.podspec"; sourceTree = "<group>"; };
		OBJ_255 /* Gemfile.lock */ = {isa = PBXFileReference; lastKnownFileType = text; path = Gemfile.lock; sourceTree = "<group>"; };
		OBJ_26 /* PayloadAction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PayloadAction.swift; sourceTree = "<group>"; };
		OBJ_28 /* ObservableType+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ObservableType+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_30 /* LoggingService.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LoggingService.swift; sourceTree = "<group>"; };
		OBJ_31 /* SharedDictionary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SharedDictionary.swift; sourceTree = "<group>"; };
		OBJ_34 /* ChainTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ChainTests.swift; sourceTree = "<group>"; };
		OBJ_35 /* Dictionary+ExtensionsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Dictionary+ExtensionsTests.swift"; sourceTree = "<group>"; };
		OBJ_36 /* DispatcherTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DispatcherTests.swift; sourceTree = "<group>"; };
		OBJ_37 /* ReducerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReducerTests.swift; sourceTree = "<group>"; };
		OBJ_38 /* TaskTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TaskTests.swift; sourceTree = "<group>"; };
		OBJ_39 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_9 /* Action.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Action.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_307 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				F2AC9CD1244EF6BC00487649 /* RxSwift in Frameworks */,
				F2AC9CCE244EF6A500487649 /* NIO in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_326 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_327 /* MiniSwift.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		12A3ADEB2328D25600019F49 /* LoggingService */ = {
			isa = PBXGroup;
			children = (
				OBJ_30 /* LoggingService.swift */,
			);
			path = LoggingService;
			sourceTree = "<group>";
		};
		12A3ADEC2328D29F00019F49 /* TestMiddleware */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* TestMiddleware.swift */,
			);
			path = TestMiddleware;
			sourceTree = "<group>";
		};
		OBJ_18 /* Utils */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* Foundation */,
				OBJ_25 /* OrderedSet.swift */,
				OBJ_26 /* PayloadAction.swift */,
				OBJ_27 /* RxSwift */,
				OBJ_31 /* SharedDictionary.swift */,
			);
			path = Utils;
			sourceTree = "<group>";
		};
		OBJ_19 /* Foundation */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* Dictionary+Extensions.swift */,
				OBJ_21 /* DispatchQueue+Extensions.swift */,
				OBJ_22 /* String+Extensions.swift */,
			);
			path = Foundation;
			sourceTree = "<group>";
		};
		OBJ_234 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Mini::MiniSwift::Product" /* MiniSwift.framework */,
				"Mini::MiniSwiftTests::Product" /* MiniSwiftTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_27 /* RxSwift */ = {
			isa = PBXGroup;
			children = (
				OBJ_28 /* ObservableType+Extensions.swift */,
				12A3ADED2328D33400019F49 /* PrimitiveSequenceType+Extensions.swift */,
			);
			path = RxSwift;
			sourceTree = "<group>";
		};
		OBJ_32 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_33 /* MiniSwiftTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_33 /* MiniSwiftTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_34 /* ChainTests.swift */,
				OBJ_35 /* Dictionary+ExtensionsTests.swift */,
				OBJ_36 /* DispatcherTests.swift */,
				OBJ_37 /* ReducerTests.swift */,
				OBJ_38 /* TaskTests.swift */,
				OBJ_39 /* XCTestManifests.swift */,
			);
			name = MiniSwiftTests;
			path = Tests/MiniSwiftTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_7 /* Sources */,
				OBJ_32 /* Tests */,
				OBJ_234 /* Products */,
				OBJ_240 /* bin */,
				OBJ_242 /* fastlane */,
				OBJ_243 /* Templates */,
				OBJ_245 /* LICENSE */,
				OBJ_247 /* MiniSwift.framework.coverage.txt */,
				OBJ_248 /* README.md */,
				OBJ_249 /* Rakefile */,
				OBJ_250 /* MiniSwiftTests.xctest.coverage.txt */,
				OBJ_251 /* _config.yml */,
				OBJ_252 /* DangerFile */,
				OBJ_253 /* Gemfile */,
				OBJ_254 /* Mini-Swift.podspec */,
				OBJ_255 /* Gemfile.lock */,
			);
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* MiniSwift */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* MiniSwift */ = {
			isa = PBXGroup;
			children = (
				12A3ADEC2328D29F00019F49 /* TestMiddleware */,
				12A3ADEB2328D25600019F49 /* LoggingService */,
				OBJ_9 /* Action.swift */,
				OBJ_10 /* ActionReducer.swift */,
				OBJ_11 /* Dispatcher.swift */,
				OBJ_12 /* Middleware.swift */,
				OBJ_13 /* ReducerGroup.swift */,
				OBJ_14 /* ServiceType.swift */,
				OBJ_15 /* StateType.swift */,
				OBJ_16 /* Store.swift */,
				OBJ_17 /* Task.swift */,
				OBJ_18 /* Utils */,
			);
			name = MiniSwift;
			path = Sources/MiniSwift;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Mini::MiniSwift" /* MiniSwift */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_285 /* Build configuration list for PBXNativeTarget "MiniSwift" */;
			buildPhases = (
				F2F0AA1C232185C800BC7CD9 /* Swiftlint */,
				OBJ_288 /* Sources */,
				OBJ_307 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MiniSwift;
			packageProductDependencies = (
				F2AC9CCD244EF6A500487649 /* NIO */,
				F2AC9CD0244EF6BC00487649 /* RxSwift */,
			);
			productName = MiniSwift;
			productReference = "Mini::MiniSwift::Product" /* MiniSwift.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Mini::MiniSwiftTests" /* MiniSwiftTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_316 /* Build configuration list for PBXNativeTarget "MiniSwiftTests" */;
			buildPhases = (
				OBJ_319 /* Sources */,
				OBJ_326 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_331 /* PBXTargetDependency */,
			);
			name = MiniSwiftTests;
			productName = MiniSwiftTests;
			productReference = "Mini::MiniSwiftTests::Product" /* MiniSwiftTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Mini" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5;
			packageReferences = (
				F2AC9CCC244EF6A500487649 /* XCRemoteSwiftPackageReference "swift-nio" */,
				F2AC9CCF244EF6BC00487649 /* XCRemoteSwiftPackageReference "RxSwift" */,
			);
			productRefGroup = OBJ_234 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Mini::MiniSwift" /* MiniSwift */,
				"Mini::MiniSwiftTests" /* MiniSwiftTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		F2F0AA1C232185C800BC7CD9 /* Swiftlint */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = Swiftlint;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "if which swiftlint >/dev/null; then\nswiftlint autocorrect\nswiftlint\nelse\necho \"warning: SwiftLint not installed, run: brew install swiftlint\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_288 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_289 /* Action.swift in Sources */,
				OBJ_290 /* ActionReducer.swift in Sources */,
				OBJ_291 /* Dispatcher.swift in Sources */,
				OBJ_292 /* Middleware.swift in Sources */,
				OBJ_293 /* ReducerGroup.swift in Sources */,
				OBJ_294 /* ServiceType.swift in Sources */,
				OBJ_295 /* StateType.swift in Sources */,
				OBJ_296 /* Store.swift in Sources */,
				OBJ_297 /* Task.swift in Sources */,
				OBJ_298 /* Dictionary+Extensions.swift in Sources */,
				OBJ_299 /* DispatchQueue+Extensions.swift in Sources */,
				12A3ADEF2328D3D100019F49 /* PrimitiveSequenceType+Extensions.swift in Sources */,
				OBJ_300 /* String+Extensions.swift in Sources */,
				OBJ_301 /* TestMiddleware.swift in Sources */,
				OBJ_302 /* OrderedSet.swift in Sources */,
				OBJ_303 /* PayloadAction.swift in Sources */,
				OBJ_304 /* ObservableType+Extensions.swift in Sources */,
				OBJ_306 /* SharedDictionary.swift in Sources */,
				OBJ_305 /* LoggingService.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_319 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_320 /* ChainTests.swift in Sources */,
				OBJ_321 /* Dictionary+ExtensionsTests.swift in Sources */,
				OBJ_322 /* DispatcherTests.swift in Sources */,
				OBJ_323 /* ReducerTests.swift in Sources */,
				OBJ_324 /* TaskTests.swift in Sources */,
				OBJ_325 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_331 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Mini::MiniSwift" /* MiniSwift */;
			targetProxy = F2F0AA162321256C00BC7CD9 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_286 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/swift-nio/Sources/CNIOAtomics/include",
				);
				INFOPLIST_FILE = Mini.xcodeproj/MiniSwift_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = MiniSwift;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MiniSwift;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_287 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/swift-nio/Sources/CNIOAtomics/include",
				);
				INFOPLIST_FILE = Mini.xcodeproj/MiniSwift_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = MiniSwift;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MiniSwift;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_317 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/swift-nio/Sources/CNIOAtomics/include",
				);
				INFOPLIST_FILE = Mini.xcodeproj/MiniSwiftTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MiniSwiftTests;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_318 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/swift-nio/Sources/CNIOAtomics/include",
				);
				INFOPLIST_FILE = Mini.xcodeproj/MiniSwiftTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MiniSwiftTests;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Mini" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_285 /* Build configuration list for PBXNativeTarget "MiniSwift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_286 /* Debug */,
				OBJ_287 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_316 /* Build configuration list for PBXNativeTarget "MiniSwiftTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_317 /* Debug */,
				OBJ_318 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCRemoteSwiftPackageReference section */
		F2AC9CCC244EF6A500487649 /* XCRemoteSwiftPackageReference "swift-nio" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/apple/swift-nio.git";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 2.16.0;
			};
		};
		F2AC9CCF244EF6BC00487649 /* XCRemoteSwiftPackageReference "RxSwift" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/ReactiveX/RxSwift.git";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 5.1.1;
			};
		};
/* End XCRemoteSwiftPackageReference section */

/* Begin XCSwiftPackageProductDependency section */
		F2AC9CCD244EF6A500487649 /* NIO */ = {
			isa = XCSwiftPackageProductDependency;
			package = F2AC9CCC244EF6A500487649 /* XCRemoteSwiftPackageReference "swift-nio" */;
			productName = NIO;
		};
		F2AC9CD0244EF6BC00487649 /* RxSwift */ = {
			isa = XCSwiftPackageProductDependency;
			package = F2AC9CCF244EF6BC00487649 /* XCRemoteSwiftPackageReference "RxSwift" */;
			productName = RxSwift;
		};
/* End XCSwiftPackageProductDependency section */
	};
	rootObject = OBJ_1 /* Project object */;
}
